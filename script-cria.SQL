-- Nomes e RAs dos integrantes:
-- Bruno Zin Almas - 769658
-- Diogo Ichiro - 760528
-- Fabiano Alberto Teodoro Junior - 790800
-- Vitor Mendes Camilo - 790736


/* Comandos de remoção das tabelas 

-- necessario remover esse CONSTRAINT para deletar entregador antes de pedido
ALTER TABLE pedido DROP CONSTRAINT entregador_fk;

DROP TABLE entrega;
DROP TABLE entregador;
DROP TABLE prepara;
DROP TABLE forma_contato;
DROP TABLE metodo_pagamento;
DROP TABLE pedido;
DROP TABLE telefone_cliente;
DROP TABLE cliente_distancia;
DROP TABLE cliente_fisico;
DROP TABLE cliente;
DROP TABLE ingredientes;
DROP TABLE itens;
DROP TABLE cardapio;
DROP TABLE telefone_funcionario;
DROP TABLE funcionario;
DROP TABLE fornece;
DROP TABLE telefone_fornecedor;
DROP TABLE fornecedor;
DROP TABLE mantimentos;
DROP TABLE restaurante;
-- Fim comandos de remoção das tabelas */


--Algumas tabelas terao apenas 1 insercao (apenas restaurante);
--Outras tabelas terao 5 insercoes (a pedido da especificacao do trabalho);
--Outras tabelas terao 10 insercoes (como no caso de cliente-->cliente fisico + cliente a distancia)

--Criação da tabela de único restaurante, no caso, com todos os atributos
CREATE TABLE restaurante(
	--Lista de atributos do restaurante
    cnpj_rest VARCHAR(20) NOT NULL,
    nome_rest VARCHAR(50) NOT NULL,
    estoque VARCHAR(200),
    nota INTEGER,
    cep VARCHAR(20) NOT NULL,
    bairro VARCHAR(50) NOT NULL,
    rua VARCHAR(50) NOT NULL,
    complemento VARCHAR(50),
    numero VARCHAR(10) NOT NULL,
--Restrições aplicadas
    CONSTRAINT nota_min CHECK(nota >= 0),
    CONSTRAINT nota_max CHECK(nota <= 10),
    CONSTRAINT restaurante_pk PRIMARY KEY(cnpj_rest),
    CONSTRAINT nome_rest_unique UNIQUE(nome_rest)
);

--Tabela de mantimentos do nosso Restaurante
CREATE TABLE mantimentos(
	--Lista de atributos dos mantimentos
    cod_mantimento INTEGER GENERATED BY DEFAULT AS IDENTITY,
    cnpj_rest VARCHAR(20) NOT NULL,
    validade DATE NOT NULL,
    marca VARCHAR(50) NOT NULL,
    quantidade INTEGER NOT NULL,
--Restrições aplicadas
    CONSTRAINT quantidade_pos_check CHECK (quantidade > 0),
    CONSTRAINT mantimentos_pk PRIMARY KEY(cod_mantimento),
    CONSTRAINT restaurante_fk FOREIGN KEY(cnpj_rest)
        REFERENCES restaurante(cnpj_rest)
);

--Tabela dos fornecedores do restaurante
CREATE TABLE fornecedor(
	--Lista de atributos dos fornecedores
    cnpj_forn VARCHAR(20) NOT NULL,
    nome_forn VARCHAR(50) NOT NULL,
    cnpj_rest VARCHAR(20) NOT NULL,
    cep VARCHAR(20) NOT NULL,
    bairro VARCHAR(50) NOT NULL,
    rua VARCHAR(50) NOT NULL,
    complemento VARCHAR(50),
    numero VARCHAR(10) NOT NULL,
--Restrições do fornecedor
	CONSTRAINT nome_forn_unique UNIQUE(nome_forn),
    CONSTRAINT fornecedor_pk PRIMARY KEY(cnpj_forn),
    CONSTRAINT restaurante_fk FOREIGN KEY(cnpj_rest)
        REFERENCES restaurante(cnpj_rest)
            ON DELETE CASCADE
);

--Criação da tabela dos telefones dos fornecedores
CREATE TABLE telefone_fornecedor(
	--Lista de atributos dos fornecedores
    cnpj_forn VARCHAR(20) NOT NULL,
    telefone VARCHAR(20) NOT NULL,
--Restrições aplicadas
    CONSTRAINT telefone_forn_unique UNIQUE(telefone),
    CONSTRAINT telefone_fornecedor_pk PRIMARY KEY(cnpj_forn),
    CONSTRAINT fornecedor_fk FOREIGN KEY(cnpj_forn)
        REFERENCES fornecedor(cnpj_forn)
            ON DELETE CASCADE
);

--Criação da tabela "fornece"
CREATE TABLE fornece(
    cnpj_forn VARCHAR(20) NOT NULL,
    cod_mantimento INTEGER NOT NULL,
--Restrições aplicadas
    CONSTRAINT fornece_pk PRIMARY KEY(cnpj_forn, cod_mantimento),
    CONSTRAINT fornecedor_fk FOREIGN KEY(cnpj_forn)
        REFERENCES fornecedor(cnpj_forn)
            ON DELETE CASCADE,
    CONSTRAINT mantimentos_fk FOREIGN KEY(cod_mantimento)
        REFERENCES mantimentos(cod_mantimento)
            ON DELETE CASCADE
);

--Criação da tabela funcionario.
CREATE TABLE funcionario(
	--Lista de atributos dos funcionarios
    cod_funcionario INTEGER GENERATED BY DEFAULT AS IDENTITY,
    rg VARCHAR(20) NOT NULL,
    cpf VARCHAR(20) NOT NULL,
    nome_func VARCHAR(50) NOT NULL,
    carteira_trabalho VARCHAR(20) NOT NULL,
    salario NUMERIC(8,2) NOT NULL,
    cnpj_rest VARCHAR(20) NOT NULL,
--Restrições de funcionario
    CONSTRAINT salario_pos_check CHECK(salario > 0),
	CONSTRAINT rg_unique UNIQUE(rg),
	CONSTRAINT cpf_unique UNIQUE(cpf),
    CONSTRAINT nome_func_unique UNIQUE(nome_func),
    CONSTRAINT cart_trab_unique UNIQUE(carteira_trabalho),
    CONSTRAINT funcionario_pk PRIMARY KEY(cod_funcionario),
    CONSTRAINT restaurante_fk FOREIGN KEY(cnpj_rest)
        REFERENCES restaurante(cnpj_rest)
            ON DELETE CASCADE
);

--Criação da tabela de telefones dos funcionarios
CREATE TABLE telefone_funcionario(
    cod_funcionario INTEGER NOT NULL,
    telefone VARCHAR(20) NOT NULL,
--Restrições
    CONSTRAINT telefone_func_unique UNIQUE(telefone),
    CONSTRAINT telefone_funcionario_pk PRIMARY KEY(cod_funcionario),
    CONSTRAINT funcionario_fk FOREIGN KEY(cod_funcionario)
        REFERENCES funcionario(cod_funcionario)
            ON DELETE CASCADE
);

--Criação da tabela cardápio
CREATE TABLE cardapio(
	--Lista de atributos dos cardápios
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    cnpj_rest VARCHAR(20) NOT NULL,
--Restrições
    CONSTRAINT cardapio_pk PRIMARY KEY(id),
    CONSTRAINT restaurante_fk FOREIGN KEY(cnpj_rest)
        REFERENCES restaurante(cnpj_rest)
            ON DELETE CASCADE
);

--Criação da tabela itens do cardápio (pratos)
CREATE TABLE itens(
	--Lista de atributos dos itens (pratos)
    id INTEGER NOT NULL,
    preco INTEGER NOT NULL,
    tabela_nutri VARCHAR(200) NOT NULL,
--restrições
    CONSTRAINT preco_iten_check CHECK(preco > 0),
    CONSTRAINT itens_pk PRIMARY KEY(id),
    CONSTRAINT cardapio_fk FOREIGN KEY(id)
        REFERENCES cardapio(id)
);

--Criação da tabela ingredientes dos itens (pratos)
CREATE TABLE ingredientes(
	--Lista de atributos dos fornecedores
    id INTEGER NOT NULL,
    ingrediente VARCHAR(200) NOT NULL,
--Restrições
    CONSTRAINT ingredientes_pk PRIMARY KEY(id),
    CONSTRAINT cardapio_fk FOREIGN KEY(id)
        REFERENCES cardapio(id)
);

-- SECOND PART --
--Criação da tabela cliente (terá 10 inserções)
CREATE TABLE cliente(
	--Lista de atributos de todos os clientes
    cod_cliente INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome_cli VARCHAR(50) NOT NULL,
    cnpj_rest VARCHAR(20) NOT NULL,
    nota INTEGER,
--restrições
    CONSTRAINT cliente_pk PRIMARY KEY(cod_cliente),
    CONSTRAINT restaurante_fk FOREIGN KEY(cnpj_rest)
        REFERENCES restaurante(cnpj_rest)
            ON DELETE CASCADE
);

--Criação da tabela de clientes físicos (terá 5 inserções)
CREATE TABLE cliente_fisico(
        cod_cliente INTEGER NOT NULL,
--Lista de atributos dos clientes presenciais
        CONSTRAINT cliente_fisico_pk PRIMARY KEY(cod_cliente),
        CONSTRAINT cliente_fk FOREIGN KEY(cod_cliente)
            REFERENCES cliente(cod_cliente)
                ON DELETE CASCADE
);

--Criação da tabela clientes à distância (terá posteriormente 5 inserções)
CREATE TABLE cliente_distancia(
	--Lista de atributos dos clientes à distância
        cod_cliente INTEGER NOT NULL,
        cep VARCHAR(20) NOT NULL,
        bairro VARCHAR(50) NOT NULL,
        rua VARCHAR(50) NOT NULL,
        complemento VARCHAR(50),
        numero INTEGER NOT NULL,

        CONSTRAINT cliente_distancia_pk PRIMARY KEY(cod_cliente),
        CONSTRAINT cliente_fk FOREIGN KEY(cod_cliente)
            REFERENCES cliente(cod_cliente)
                ON DELETE CASCADE
);

--Criação da tabela de telefones dos clientes
CREATE TABLE telefone_cliente(
    cod_cliente INTEGER NOT NULL,
    telefone VARCHAR(20) NOT NULL,

    CONSTRAINT telefone_cli_unique UNIQUE(telefone),
    CONSTRAINT telefone_cliente_pk PRIMARY KEY(cod_cliente),
    CONSTRAINT cliente_fk FOREIGN KEY(cod_cliente)
        REFERENCES cliente(cod_cliente)
            ON DELETE CASCADE
);

--THIRD PART--
--Criação da tabela de pedido dos clientes (10 inserções, 5 de cada tipo de cliente)
CREATE TABLE pedido(
	--Lista de atributos dos pedidos de todos os clientes (físicos e distantes)
    cod_pedido INTEGER GENERATED BY DEFAULT AS IDENTITY,
    itens VARCHAR(200) NOT NULL,
    preco INTEGER NOT NULL,
    cod_cliente INTEGER NOT NULL,
    cod_entregador INTEGER NOT NULL,
    -- cod_entregador FOREIGN KEY é adicionado posteriormente, pois a relação ainda não existe
-- restições 
    CONSTRAINT preco_pedido_check CHECK(preco > 0),
    CONSTRAINT pedido_pk PRIMARY KEY(cod_pedido),
    CONSTRAINT cliente_fk FOREIGN KEY(cod_cliente)
        REFERENCES cliente(cod_cliente)
            ON DELETE CASCADE
);

--Criação da tabela método de pagamento, de todos os clientes (10)
CREATE TABLE metodo_pagamento(
	--Lista de atributos para o método de pagamento de cada cliente
    cod_pedido INTEGER NOT NULL,
    pix BOOLEAN NOT NULL DEFAULT 'false',
    cartao BOOLEAN NOT NULL DEFAULT 'false',
    dinheiro BOOLEAN NOT NULL DEFAULT 'false',
-- Restrições
    CONSTRAINT metodo_pagamento_pk PRIMARY KEY(cod_pedido),
    CONSTRAINT pedido_fk FOREIGN KEY(cod_pedido)
        REFERENCES pedido(cod_pedido)
            ON DELETE CASCADE
);

--Criação da tabela forma de contato de clientes
CREATE TABLE forma_contato(
	--Lista de atributos da forma de contato
    cod_pedido INTEGER NOT NULL,
    aplicativo BOOLEAN NOT NULL DEFAULT 'false',
    telefone BOOLEAN NOT NULL DEFAULT 'false',
    dinheiro BOOLEAN NOT NULL DEFAULT 'false',

    CONSTRAINT forma_contato_pk PRIMARY KEY(cod_pedido),
    CONSTRAINT pedido_fk FOREIGN KEY(cod_pedido)
        REFERENCES pedido(cod_pedido)
            ON DELETE CASCADE
);

--Criação da tabela "prepara"
CREATE TABLE prepara(
    cod_funcionario INTEGER NOT NULL,
    cod_pedido INTEGER NOT NULL,

    CONSTRAINT prepara_pk PRIMARY KEY(cod_funcionario, cod_pedido),
    CONSTRAINT funcionario_fk FOREIGN KEY(cod_funcionario)
        REFERENCES funcionario(cod_funcionario),
    CONSTRAINT pedido_fk FOREIGN KEY(cod_pedido)
        REFERENCES pedido(cod_pedido)
);

--Criação da tabela do entregador
CREATE TABLE entregador(
	--Lista de atributos dos entregadores
    cod_entregador INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome_entr VARCHAR(50) NOT NULL,

    CONSTRAINT entregador_pk PRIMARY KEY(cod_entregador)
);

--Criação da tabela "entrega"
CREATE TABLE entrega(
	--Lista de atributos das entregas
    cod_pedido INTEGER NOT NULL,
    cod_entregador INTEGER NOT NULL,

    CONSTRAINT entrega_pk PRIMARY KEY(cod_pedido, cod_entregador),
    CONSTRAINT pedido_fk FOREIGN KEY(cod_pedido)
        REFERENCES pedido(cod_pedido),
    CONSTRAINT entregador_fk FOREIGN KEY(cod_entregador)
        REFERENCES entregador(cod_entregador)
);

-- Adiciona a chave externa para o entregador na relação pedido, agora que a relação entregador já foi criada.
ALTER TABLE pedido ADD CONSTRAINT entregador_fk FOREIGN KEY(cod_entregador) REFERENCES entregador(cod_entregador);